<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.fudax.sqcs.version.dao.VersionInfoDAO">
	<select id="versionBugList" resultMap = "versionBugList_return">
		select pro_id, 
		       pro_theme, 
		       pro_status, 
		       pro_level, 
		       pro_pri, 
		       pro_found_person, 
		       pro_deal_person 
		from problem_list 
		where pro_version = #{version}
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionBugList_return">
		<id property="pro_id" column="pro_id" javaType = "String"/>
		<result property="pro_theme" column = "pro_theme" javaType = "String"/>
		<result property="pro_status" column="pro_status" javaType = "String"/>
		<result property="pro_level" column="pro_level" javaType="String"/>
		<result property="pro_pri" column = "pro_pri" javaType = "String"/>
		<result property="pro_found_person" column="pro_found_person" javaType = "String"/>
		<result property="pro_deal_person" column="pro_deal_person" javaType="String"/>
	</resultMap>
	<select id="versionContent" resultMap = "versionContent_return">
		select a.system_version, 
		       case when (a.sr_code = a.system_version) then null when (n.submit_person is null) then 'IT内部优化'else n.submit_person end as submit_person, 
				case when (a.sr_code = a.system_version) then null when (n.benefit_name is null) then 'IT内部优化' else n.benefit_name end as benefit_name, 
				a.source_id, 
				case when (a.sr_code = a.system_version) then '无SR缺陷' else a.sr_code end as sr_code, 
				case when (a.sr_code = a.system_version) then '' else a.man_power end as man_power,
				+ifnull(a.bug_num, 0) as bug_num, 
				a.sr_name, 
				a.date_add_to_rm, 
				a.date_dev_complete 
		from (select vm.system_version, 
			  		 vm.sr_code,
			  		 vm.sr_name, 
			  		 vm.source_id, 
			  		 vm.bug_num, 
			  		 vm.man_power, 
			  		 si.date_add_to_rm, 
			  		 si.date_dev_complete
			  from version_manpower vm,sr_info si
			  where vm.system_version =#{version}
			        and vm.sr_code = si.sr_id) a 
	    left join (select id_need, 
	                      submit_person, 
	                      benefit_name 
	               from need_info) n 
	    on n.id_need = a.source_id 
	    union 
	    select '合计', '', '', '合计', '', sum( case when (sr_code = system_version) then 0 else man_power end ), 
	           sum(bug_num), '', '', '' 
	    from version_manpower 
	    where system_version = #{version} 
	    order by system_version, sr_code
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionContent_return">
		<result property="system_version" column = "system_version" javaType = "String"/>
		<result property="submit_person" column="submit_person" javaType = "String"/>
		<result property="benefit_name" column="benefit_name" javaType="String"/>
		<result property="source_id" column = "source_id" javaType = "String"/>
		<result property="sr_code" column="sr_code" javaType = "String"/>
		<result property="man_power" column="man_power" javaType="String"/>
		<result property="bug_num" column="bug_num" javaType="String"/>
		<result property="sr_name" column = "sr_name" javaType = "String"/>
		<result property="date_add_to_rm" column="date_add_to_rm" javaType = "String"/>
		<result property="date_dev_complete" column="date_dev_complete" javaType="String"/>
	</resultMap>
	
	<select id="versionInfoDataSql" resultMap = "versionInfoDataSql_return">
		select b.system_alias, 
			   a.system_version, 
			   a.version_type, 
			   a.first_handover_test_time, 
			   a.reviewtest_end_date, 
			   a.environment, 
			   a.version_status 
	    from version_plantime a, dept_system b 
	    where b.system_name = a.sub_system_name 
	    	  <if test="condition == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if>
	    	  and a.version_status != '已关闭' 
			  and a.reviewtest_end_date >= date(now()) 
			  and date(now()) >= a.first_handover_test_time
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionInfoDataSql_return">
		<result property="system_alias" column = "system_alias" javaType = "String"/>
		<result property="system_version" column="system_version" javaType = "String"/>
		<result property="version_type" column="version_type" javaType="String"/>
		<result property="first_handover_test_time" column = "first_handover_test_time" javaType = "String"/>
		<result property="reviewtest_end_date" column="reviewtest_end_date" javaType = "String"/>
		<result property="environment" column="environment" javaType="String"/>
		<result property="version_status" column="version_status" javaType="String"/>
	</resultMap>
	<select id="versionInfoBugSql" resultMap = "versionInfoBugSql_return">
		select p.pro_version, 
			   ifnull(count(p.pro_id),0) as bug_count 
	    from version_plantime a, dept_system b, problem_list p 
	    where a.system_version = p.pro_version 
	          and b.system_name = a.sub_system_name 
	    	  <if test="condition == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if>
	    	  and a.version_status != '已关闭' 
			  and a.reviewtest_end_date >= date(now()) 
			  and date(now()) >= a.first_handover_test_time
	    group by pro_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionInfoBugSql_return">
		<result property="pro_version" column = "pro_version" javaType = "String"/>
		<result property="bug_count" column="bug_count" javaType = "String"/>
	</resultMap>
	<select id="versionInfoSrSql" resultMap = "versionInfoSrSql_return">
		select v.system_version as system_version, 
		       ifnull(count(v.sr_code),0) as sr_count 
		from version_plantime a, dept_system b, version_manpower v 
		where a.system_version = v.system_version 
			  and v.system_version != v.sr_code 
			  and b.system_name = a.sub_system_name 
	    	  <if test="condition == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if>
	    	  and a.version_status != '已关闭' 
			  and a.reviewtest_end_date >= date(now()) 
			  and date(now()) >= a.first_handover_test_time
	    group by system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionInfoSrSql_return">
		<result property="system_version" column = "system_version" javaType = "String"/>
		<result property="sr_count" column="sr_count" javaType = "String"/>
	</resultMap>
	<select id="versionInfoWarnSql" resultMap = "versionInfoWarnSql_return">
		select w.system_version, 
		       ifnull(count(w.warning_info),0) as warn_count 
		       from version_plantime a, dept_system b,warning_info w 
		where a.system_version = w.system_version 
			  and b.system_name = a.sub_system_name 
	    	  <if test="condition == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if>
	    	  and a.version_status != '已关闭' 
			  and a.reviewtest_end_date >= date(now()) 
			  and date(now()) >= a.first_handover_test_time
		group by system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionInfoWarnSql_return">
		<result property="system_version" column = "system_version" javaType = "String"/>
		<result property="warn_count" column="warn_count" javaType = "String"/>
	</resultMap>
	<select id="versionListDataSql" resultMap = "versionListDataSql_return">
		select b.system_alias, 
		       a.system_version, 
		       a.version_type, 
		       a.first_handover_test_time, 
		       a.reviewtest_end_date,
		       a.environment, 
		       a.is_delay, 
		       a.version_status  
		from version_plantime a, dept_system b 
		where b.system_name = a.sub_system_name 
		      <if test="condition1 == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if> 
	    	  and a.version_status != '已关闭'
	    	  <if test="condition2 == 'reviewtest_end_date'">
	    	  and a.reviewtest_end_date >=#{begin_date}
	    	  </if>
	    	  <if test="condition2 == 'reviewtest_end_date'">
	    	  and #{end_date} >= a.reviewtest_end_date
	    	  </if>
	    	  <if test="condition2 == 'first_handover_test_time'">
	    	  and a.first_handover_test_time >= #{begin_date}
	    	  </if>
	    	  <if test="condition2 == 'first_handover_test_time'">
	    	  and #{end_date} >= a.first_handover_test_time
	    	  </if>
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionListDataSql_return">
		<result property="system_alias" column = "system_alias" javaType = "String"/>
		<result property="system_version" column="system_version" javaType = "String"/>
		<result property="version_type" column = "version_type" javaType = "String"/>
		<result property="first_handover_test_time" column="first_handover_test_time" javaType = "String"/>
		<result property="reviewtest_end_date" column = "reviewtest_end_date" javaType = "String"/>
		<result property="environment" column="environment" javaType = "String"/>
		<result property="is_delay" column = "is_delay" javaType = "String"/>
		<result property="version_status" column="version_status" javaType = "String"/>
	</resultMap>
	<select id="versionListBugSql" resultMap = "versionListBugSql_return">
		select p.pro_version, 
		       count(p.pro_id) as bug_count 
	    from version_plantime a, dept_system b, problem_list p 
	    where a.system_version = p.pro_version 
	    	  and b.system_name = a.sub_system_name 
		      <if test="condition1 == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if> 
	    	  and a.version_status != '已关闭'
	    	  <if test="condition2 == 'reviewtest_end_date'">
	    	  and a.reviewtest_end_date >=#{begin_date}
	    	  and #{end_date} >= a.reviewtest_end_date
	    	  </if>
	    	  <if test="condition2 == 'first_handover_test_time'">
	    	  and a.first_handover_test_time >= #{begin_date}
	    	  and #{end_date} >= a.first_handover_test_time
	    	  </if>
	    group by pro_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionListBugSql_return">
		<result property="pro_version" column = "pro_version" javaType = "String"/>
		<result property="bug_count" column="bug_count" javaType = "String"/>
	</resultMap>
	<select id="versionListSrSql" resultMap = "versionListSrSql_return">
		select v.system_version as system_version, 
		       count(v.sr_code) as sr_count 
		from version_plantime a, dept_system b, version_manpower v
	    where a.system_version = v.system_version 
	          and v.system_version != v.sr_code 
	          and b.system_name = a.sub_system_name 
		      <if test="condition1 == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if> 
	    	  and a.version_status != '已关闭'
	    	  <if test="condition2 == 'reviewtest_end_date'">
	    	  and a.reviewtest_end_date >=#{begin_date}
	    	  and #{end_date} >= a.reviewtest_end_date
	    	  </if>
	    	  <if test="condition2 == 'first_handover_test_time'">
	    	  and a.first_handover_test_time >= #{begin_date}
	    	  and #{end_date} >= a.first_handover_test_time
	    	  </if>
		group by system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionListSrSql_return">
		<result property="system_version" column = "system_version" javaType = "String"/>
		<result property="sr_count" column="sr_count" javaType = "String"/>
	</resultMap>
	<select id="versionListWarnSql" resultMap = "versionListWarnSql_return">
		select w.system_version as system_version, 
		       count(w.warning_info) as warn_count 
	    from version_plantime a, dept_system b, warning_info w 
	    where a.system_version = w.system_version 
	          and b.system_name = a.sub_system_name 
		      <if test="condition1 == 'test_team'">
	    	  and b.test_team = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'dev_dept'">
	    	  and b.dev_dept = #{group_name}
	    	  </if>
	    	  <if test="condition1 == 'system_alias'">
	    	  and b.system_alias = #{system}
	    	  </if> 
	    	  and a.version_status != '已关闭'
	    	  <if test="condition2 == 'reviewtest_end_date'">
	    	  and a.reviewtest_end_date >=#{begin_date}
	    	  and #{end_date} >= a.reviewtest_end_date
	    	  </if>
	    	  <if test="condition2 == 'first_handover_test_time'">
	    	  and a.first_handover_test_time >= #{begin_date}
	    	  and #{end_date} >= a.first_handover_test_time
	    	  </if>
	    group by system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionListWarnSql_return">
		<result property="system_version" column = "system_version" javaType = "String"/>
		<result property="warn_count" column="warn_count" javaType = "String"/>
	</resultMap>
	<select id="versionSchedule" resultMap = "versionSchedule_return">
		select * 
		from test_schedule 
		where system_version = #{system_version} 
		and schedule_date = (select max(schedule_date) 
							 from test_schedule 
							 where system_version = #{system_version}) 
		<if test="flag == 'st'">
			and test_plan like 'ST%'
		</if>
		<if test="flag == 'uat'">
			and test_plan like 'UAT%'
		</if>
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionSchedule_return">
		<result property="system_alias" column = "system_alias" javaType = "String"/>
		<result property="system_version" column="system_version" javaType = "String"/>
		<result property="test_plan" column="test_plan" javaType="String"/>
		<result property="schedule_date" column = "schedule_date" javaType = "String"/>
		<result property="need_code" column="need_code" javaType = "String"/>
		<result property="sr_code" column="sr_code" javaType="String"/>
		<result property="case_count" column="case_count" javaType="String"/>
		<result property="execute_percent" column = "execute_percent" javaType = "String"/>
		<result property="passed_percent" column="passed_percent" javaType = "String"/>
		<result property="lcd" column="lcd" javaType="String"/>
		<result property="fcd" column="fcd" javaType="String"/>
	</resultMap>
	<select id="versionUnderTest" resultMap = "versionUnderTest_return">
		select system_alias, 
		       system_version, 
		       first_handover_test_time, 
		       reviewtest_end_date, ifnull(need_count, 0) as need_count 
		from (select b.system_alias, 
		             a.system_version, 
		             a.first_handover_test_time, 
		             a.reviewtest_end_date 
		      from version_plantime a,dept_system b 
		      where b.system_name = a.sub_system_name 
		            and b.test_team = #{test_team}
		            and a.reviewtest_end_date >= date(now()) 
				    and date(now()) >= a.first_handover_test_time) c 
		left join (select count(id_need) as need_count, 
						  rm_no from need_info 
						  group by rm_no) n 
		on n.rm_no = c.system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="versionUnderTest_return">
		<result property="system_alias" column = "system_alias" javaType = "String"/>
		<result property="system_version" column="system_version" javaType = "String"/>
		<result property="first_handover_test_time" column="first_handover_test_time" javaType="String"/>
		<result property="need_count" column = "need_count" javaType = "String"/>
	</resultMap>
</mapper>