<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.fudax.sqcs.warning.dao.WarningInfoDAO">

	<select id="warnInfoWhenDateIsAllAndGradeIsAll" resultMap="warnInfoWhenDateIsAllAndGradeIsAll_return">
		select distinct a.warning_date,
		a.rule_no,
		b.rule_name,
		a.warning_grade,
		a.warning_info,
		a.warning_type,
		b.owner
		from warning_info a, warning_define b
		where a.warning_type = b.warning_type
		and a.warning_grade = b.warning_grade
		and a.rule_no = b.rule_no
		and a.warning_type in('01','02','06', '07')
		and a.system_version = #{version}
		union
		select distinct b.warning_date,
		b.rule_no,
		c.rule_name,
		a.warning_grade,
		b.warning_info,
		b.warning_type,
		c.owner
		from bug_checkordeal_time a, warning_info b,(select distinct warning_type,
		rule_name,
		warning_grade,
		owner
		from warning_define) c
		where b.warning_type in ('03', '04')
		and b.system_version = a.system_version
		and b.warning_type = (case when a.check_or_deal = 'deal' then '03' else '04' end)
		and a.warning_grade = b.warning_grade
		and c.warning_grade = b.warning_grade
		and b.warning_type = c.warning_type
		and b.warning_date = a.over_time_date
		and a.is_over_time = 'Y'
		and a.system_version = #{version}
		order by warning_date
	</select>
	<resultMap type="java.util.LinkedHashMap" id="warnInfoWhenDateIsAllAndGradeIsAll_return">
		<result property="warning_date" column="warning_date" javaType="String" />
		<result property="rule_no" column="rule_no" javaType="String" />
		<result property="rule_name" column="rule_name" javaType="String" />
		<result property="warning_grade" column="warning_grade" javaType="String" />
		<result property="warning_info" column="warning_info" javaType="String" />
		<result property="warning_type" column="warning_type" javaType="String" />
		<result property="owner" column="owner" javaType="String" />
	</resultMap>

	<select id="warnInfoWhenDateIsAllAndGradeIsNotAll" resultMap="warnInfoWhenDateIsAllAndGradeIsNotAll_return">
		select distinct a.warning_date,
		a.rule_no,
		b.rule_name,
		a.warning_grade,
		a.warning_info,
		a.warning_type,
		b.owner
		from warning_info a, warning_define b
		where a.warning_type = b.warning_type
		and a.warning_grade = b.warning_grade
		and a.rule_no = b.rule_no
		and a.warning_type in('01','02','06', '07')
		and a.system_version = #{version}
		and a.warning_grade = #{warning_grade}
		union
		select distinct b.warning_date,
		b.rule_no,
		c.rule_name,
		a.warning_grade,
		b.warning_info,
		b.warning_type,
		c.owner
		from bug_checkordeal_time a, warning_info b,(select distinct warning_type,
		rule_name,
		warning_grade,
		owner
		from warning_define) c
		where b.warning_type in ('03', '04')
		and b.system_version = a.system_version
		and b.warning_type = (case when a.check_or_deal = 'deal' then '03' else '04' end)
		and a.warning_grade = b.warning_grade
		and c.warning_grade = b.warning_grade
		and b.warning_type = c.warning_type
		and b.warning_date = a.over_time_date
		and a.is_over_time = 'Y'
		and a.system_version = #{version}
		and b.warning_grade = #{warning_grade}
		order by warning_date

	</select>
	<resultMap type="java.util.LinkedHashMap" id="warnInfoWhenDateIsAllAndGradeIsNotAll_return">
		<result property="warning_date" column="warning_date" javaType="String" />
		<result property="rule_no" column="rule_no" javaType="String" />
		<result property="rule_name" column="rule_name" javaType="String" />
		<result property="warning_grade" column="warning_grade" javaType="String" />
		<result property="warning_info" column="warning_info" javaType="String" />
		<result property="warning_type" column="warning_type" javaType="String" />
		<result property="owner" column="owner" javaType="String" />
	</resultMap>

	<select id="warnInfoWhenDateIsNotAllAndGradeIsAll" resultMap="warnInfoWhenDateIsNotAllAndGradeIsAll_return">
		select distinct a.warning_date,
		a.rule_no,
		b.rule_name,
		a.warning_grade,
		a.warning_info,
		a.warning_type,
		b.owner
		from warning_info a, warning_define b
		where a.warning_type = b.warning_type
		and a.warning_grade = b.warning_grade
		and a.rule_no = b.rule_no
		and a.warning_type in('01','02','06', '07')
		and a.system_version = #{version}
		and a.warning_date = #{warning_date}
		union
		select distinct b.warning_date,
		b.rule_no,
		c.rule_name,
		a.warning_grade,
		b.warning_info,
		b.warning_type,
		c.owner
		from bug_checkordeal_time a, warning_info b,(select distinct warning_type,
		rule_name,
		warning_grade,
		owner
		from warning_define) c
		where b.warning_type in ('03', '04')
		and b.system_version = a.system_version
		and b.warning_type = (case when a.check_or_deal = 'deal' then '03' else '04' end)
		and a.warning_grade = b.warning_grade
		and c.warning_grade = b.warning_grade
		and b.warning_type = c.warning_type
		and b.warning_date = a.over_time_date
		and a.is_over_time = 'Y'
		and a.system_version = #{version}
		and b.warning_date = #{warning_date}
		order by warning_date
	</select>
	<resultMap type="java.util.LinkedHashMap" id="warnInfoWhenDateIsNotAllAndGradeIsAll_return">
		<result property="warning_date" column="warning_date" javaType="String" />
		<result property="rule_no" column="rule_no" javaType="String" />
		<result property="rule_name" column="rule_name" javaType="String" />
		<result property="warning_grade" column="warning_grade" javaType="String" />
		<result property="warning_info" column="warning_info" javaType="String" />
		<result property="warning_type" column="warning_type" javaType="String" />
		<result property="owner" column="owner" javaType="String" />
	</resultMap>

	<select id="warnInfoWhenDateIsNotAllAndGradeIsNotAll" resultMap="warnInfoWhenDateIsNotAllAndGradeIsNotAll_return">
		select distinct
		a.warning_date,
		a.rule_no,
		b.rule_name,
		a.warning_grade,
		a.warning_info,
		a.warning_type,
		b.owner
		from warning_info a, warning_define b
		where a.warning_type = b.warning_type
		and a.warning_grade = b.warning_grade
		and a.rule_no = b.rule_no
		and a.warning_type in('01','02','06', '07')
		and a.system_version = #{version}
		and a.warning_date = #{warning_date}
		and a.warning_grade = #{warning_grade}
		union
		select distinct b.warning_date,
		b.rule_no,
		c.rule_name,
		a.warning_grade,
		b.warning_info,
		b.warning_type,
		c.owner
		from bug_checkordeal_time a, warning_info b,(select distinct warning_type,
		rule_name,
		warning_grade,
		owner
		from warning_define) c
		where b.warning_type in ('03', '04')
		and b.system_version = a.system_version
		and b.warning_type = (case when a.check_or_deal = 'deal' then '03' else '04' end)
		and a.warning_grade = b.warning_grade
		and c.warning_grade = b.warning_grade
		and b.warning_type = c.warning_type
		and b.warning_date = a.over_time_date
		and a.is_over_time = 'Y'
		and a.system_version = #{version}
		and b.warning_date = #{warning_date}
		and a.warning_grade = #{warning_grade}
		order by warning_date
	</select>
	<resultMap type="java.util.LinkedHashMap" id="warnInfoWhenDateIsNotAllAndGradeIsNotAll_return">
		<result property="warning_date" column="warning_date" javaType="String" />
		<result property="rule_no" column="rule_no" javaType="String" />
		<result property="rule_name" column="rule_name" javaType="String" />
		<result property="warning_grade" column="warning_grade" javaType="String" />
		<result property="warning_info" column="warning_info" javaType="String" />
		<result property="warning_type" column="warning_type" javaType="String" />
		<result property="owner" column="owner" javaType="String" />
	</resultMap>

	<select id="detailQueryWhenTypeIs04" resultMap="detailQueryWhenTypeIs04_return">
		select distinct a.pro_id,
		a.pro_theme,
		a.pro_status,
		a.pro_level,
		a.pro_pri,
		b.hour_1,
		a.pro_nopass_num
		from problem_list a, bug_checkordeal_time b
		where a.pro_id = b.bug_id
		and b.check_or_deal = 'check'
		and b.system_version =#{system_version}
		and b.over_time_date =#{warning_date}
		and b.warning_grade =#{warning_grade}
		order by b.over_time_date, b.warning_grade
	</select>
	<resultMap type="java.util.LinkedHashMap" id="detailQueryWhenTypeIs04_return">
		<result property="pro_id" column="pro_id" javaType="String" />
		<result property="pro_theme" column="pro_theme" javaType="String" />
		<result property="pro_status" column="pro_status" javaType="String" />
		<result property="pro_level" column="pro_level" javaType="String" />
		<result property="pro_pri" column="pro_pri" javaType="String" />
		<result property="hour_1" column="hour_1" javaType="String" />
		<result property="pro_nopass_num" column="pro_nopass_num" javaType="String" />
	</resultMap>
	<select id="detailQueryWhenTypeIs03" resultMap="detailQueryWhenTypeIs03_return">
		select distinct a.pro_id,
		a.pro_theme,
		a.pro_status,
		a.pro_level,
		a.pro_pri,
		b.hour_1,
		a.pro_nopass_num
		from problem_list a, bug_checkordeal_time b
		where a.pro_id = b.bug_id
		and b.check_or_deal = 'deal'
		and b.system_version = #{system_version}
		and b.over_time_date = #{warning_date}
		and b.warning_grade = #{warning_grade}
		order by b.over_time_date, b.warning_grade
	</select>
	<resultMap type="java.util.LinkedHashMap" id="detailQueryWhenTypeIs03_return">
		<result property="pro_id" column="pro_id" javaType="String" />
		<result property="pro_theme" column="pro_theme" javaType="String" />
		<result property="pro_status" column="pro_status" javaType="String" />
		<result property="pro_level" column="pro_level" javaType="String" />
		<result property="pro_pri" column="pro_pri" javaType="String" />
		<result property="hour_1" column="hour_1" javaType="String" />
		<result property="pro_nopass_num" column="pro_nopass_num" javaType="String" />
	</resultMap>
	<select id="detailQueryWhenTypeIs06" resultMap="detailQueryWhenTypeIs06_return">
		select distinct a.pro_id,
		a.pro_theme,
		a.pro_status,
		a.pro_level,
		max(d.hour_1) as hour_1,
		a.pro_pri,
		a.pro_nopass_num,
		if(a.pro_close_date is null, ' ', pro_close_date) as pro_close_date
		from problem_list a,warning_info b, warning_define
		c, bug_checkordeal_time d
		where a.pro_version = b.system_version
		and a.pro_version =#{system_version}
		and b.warning_type = c.warning_type
		and b.warning_type = '06'
		and d.bug_id = a.pro_id
		and ( ( pro_close_date is not null and #{warning_date} >= date(a.pro_close_date))
		or (pro_close_date is null and #{warning_date} >= date(now())))
		and b.warning_grade = c.warning_grade
		and c.warning_grade = #{warning_grade}
		<if test = "flag == 'true'">
			and a.pro_nopass_num >= c.custom_field2 - 1
		</if>
		<if test="flag == 'false'">
			and a.pro_nopass_num = c.custom_field2 - 1
		</if>
		group by a.pro_id
	</select>
	<resultMap type="java.util.LinkedHashMap" id="detailQueryWhenTypeIs06_return">
		<result property="pro_id" column="pro_id" javaType="String" />
		<result property="pro_theme" column="pro_theme" javaType="String" />
		<result property="pro_status" column="pro_status" javaType="String" />
		<result property="pro_level" column="pro_level" javaType="String" />
		<result property="pro_pri" column="pro_pri" javaType="String" />
		<result property="hour_1" column="hour_1" javaType="String" />
		<result property="pro_nopass_num" column="pro_nopass_num" javaType="String" />
		<result property="pro_close_date" column="pro_close_date" javaType="String" />
	</resultMap>
	<select id="bug_none_sr" resultMap="bug_none_sr_return">
		select a.pro_id,
		a.pro_theme,
		a.pro_status,
		a.pro_level,
		a.pro_pri,
		max(b.hour_1) as hour_1,
		a.pro_nopass_num
		from problem_list a, bug_checkordeal_time b
		where a.pro_sr is null
		and a.pro_source != '部署'
		and a.pro_version = #{system_version}
		and a.pro_id = b.bug_id
		and b.check_or_deal = 'deal'
		group by a.pro_id
	</select>
	<resultMap type="java.util.LinkedHashMap" id="bug_none_sr_return">
		<result property="pro_id" column="pro_id" javaType="String" />
		<result property="pro_theme" column="pro_theme" javaType="String" />
		<result property="pro_status" column="pro_status" javaType="String" />
		<result property="pro_level" column="pro_level" javaType="String" />
		<result property="pro_pri" column="pro_pri" javaType="String" />
		<result property="hour_1" column="hour_1" javaType="String" />
		<result property="pro_nopass_num" column="pro_nopass_num" javaType="String" />
	</resultMap>
	<select id="bug_none_module" resultMap="bug_none_module_return">
		select a.pro_id,
		a.pro_theme,
		a.pro_status,
		a.pro_level,
		a.pro_pri,
		max(b.hour_1) as hour_1,
		a.pro_nopass_num
		from problem_list a, bug_checkordeal_time b
		where a.pro_module is null
		and a.pro_source != '部署'
		and a.pro_version = #{system_version}
		and a.pro_id = b.bug_id
		and b.check_or_deal = 'deal'
		group by a.pro_id
	</select>
	<resultMap type="java.util.LinkedHashMap" id="bug_none_module_return">
		<result property="pro_id" column="pro_id" javaType="String" />
		<result property="pro_theme" column="pro_theme" javaType="String" />
		<result property="pro_status" column="pro_status" javaType="String" />
		<result property="pro_level" column="pro_level" javaType="String" />
		<result property="pro_pri" column="pro_pri" javaType="String" />
		<result property="hour_1" column="hour_1" javaType="String" />
		<result property="pro_nopass_num" column="pro_nopass_num" javaType="String" />
	</resultMap>
	
	<select id="warningVersionList" resultMap = "warningVersionList_return">
		select  temp.test_team,
				group_concat(leader separator ';') leader, 
				system_version, 
				group_concat( replace(receiver, ',', ';') separator ';' ) receiver 
		from (select tti.leader, 
				    ds.test_team, 
					vp.system_version, 
					concat( ifnull(ds.tester, ''),';',ifnull(ds.dever, ''),';',ifnull(ds.assistants, '') ) receiver 
				from version_plantime vp, dept_system ds, test_team_info tti 
				where vp.sub_system_name = ds.system_name 
					  and ds.test_team = tti.test_team 
					  and ds.need_email = 'y' 
					  and vp.reviewtest_end_date >= date(now())
				group by leader, system_version) temp 
	    group by system_version 
	    order by temp.test_team
    </select>
	<resultMap type="java.util.LinkedHashMap" id="warningVersionList_return">
		<result property="test_team" column = "test_team" javaType = "String"/>
		<result property="leader" column="leader" javaType = "String"/>
		<result property="system_version" column="system_version" javaType="String"/>
		<result property="receiver" column="receiver" javaType="String"/>
	</resultMap>
	
	<select id="warn_type" resultMap = "warn_type_return">
		SELECT DISTINCT warning_type,
			   rule_name 
	    FROM warning_define
	</select>
	<resultMap type="java.util.LinkedHashMap" id="warn_type_return">
		<result property="warning_type" column = "warning_type" javaType = "String"/>
		<result property="rule_name" column="rule_name" javaType = "String"/>
	</resultMap>
</mapper>