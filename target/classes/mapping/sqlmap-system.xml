<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.fudax.sqcs.env.system.dao.SystemInfoDAO">

	<select id="queryListWhenSystemIsNotNull" resultMap="queryListWhenSystemIsNotNull_return">
		select
		a.dev_dept,
		a.dev_team,
		a.test_dept,
		a.test_team,
		a.system_alias,
		a.system_name,
		a.dever,
		a.tester,
		a.is_valid,
		a.assistants,
		count(b.system_version) as version_count
		from (select *
		from
		dept_system
		where is_valid = #{is_valid}
		<if test="system.length() >= 3">
			and system_alias like '${system}%'
		</if>
		<if test="3 > system.length()">
			and system_alias = #{system}
		</if>
		) a
		left join (select *
		from
		version_plantime) b
		on a.system_name = b.sub_system_name
		and
		b.reviewtest_end_date >= date(now())
		and date(now()) >= b.first_handover_test_time
		and
		b.version_status != '已关闭'group by a.dev_dept, a.dev_team, a.test_team, a.system_alias,
		a.system_name, a.tester, a.assistants order by a.system_alias
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryListWhenSystemIsNotNull_return">
		<result property="dev_dept" column="dev_dept" javaType="String" />
		<result property="dev_team" column="dev_team" javaType="String" />
		<result property="test_dept" column="test_dept" javaType="String" />
		<result property="test_team" column="test_team" javaType="String" />
		<result property="system_alias" column="system_alias" javaType="String" />
		<result property="system_name" column="system_name" javaType="String" />
		<result property="dever" column="dever" javaType="String" />
		<result property="tester" column="tester" javaType="String" />
		<result property="is_valid" column="is_valid" javaType="String" />
		<result property="assistants" column="assistants" javaType="String" />
		<result property="version_count" column="version_count" javaType="String" />
	</resultMap>


	<select id="queryListWhenSystemIsNull" resultMap="queryListWhenSystemIsNull_return">
		select
		a.dev_dept,
		a.dev_team,
		a.test_dept,
		a.test_team,
		a.system_alias,
		a.system_name,
		a.dever,
		a.tester,
		a.is_valid,
		a.assistants,
		count(b.system_version) as version_count
		from (select *
		from
		dept_system
		where is_valid = #{is_valid}
		and test_team =#{test_team}
		<if test="!test_team.contains('测试组')">
			and dev_dept =#{dev_dept}
		</if>
		) a
		left join (select *
		from
		version_plantime) b
		on a.system_name = b.sub_system_name
		and
		b.reviewtest_end_date >= date(now())
		and date(now()) >= b.first_handover_test_time
		and
		b.version_status != '已关闭'group by a.dev_dept, a.dev_team, a.test_team, a.system_alias,
		a.system_name, a.tester, a.assistants order by a.system_alias
	</select>

	<resultMap type="java.util.LinkedHashMap" id="queryListWhenSystemIsNull_return">
		<result property="dev_dept" column="dev_dept" javaType="String" />
		<result property="dev_team" column="dev_team" javaType="String" />
		<result property="test_dept" column="test_dept" javaType="String" />
		<result property="test_team" column="test_team" javaType="String" />
		<result property="system_alias" column="system_alias" javaType="String" />
		<result property="system_name" column="system_name" javaType="String" />
		<result property="dever" column="dever" javaType="String" />
		<result property="tester" column="tester" javaType="String" />
		<result property="is_valid" column="is_valid" javaType="String" />
		<result property="assistants" column="assistants" javaType="String" />
		<result property="version_count" column="version_count" javaType="String" />
	</resultMap>

	<select id="queryDetail" resultMap="queryDetail_return">
		select
		dev_dept,
		dev_team,
		test_dept,
		test_team,
		system_alias,
		system_name,
		tester,
		dever,
		assistants,
		module,
		warning_define,
		case_source,
		is_valid
		from dept_system
		where system_alias = #{system_alias}
		<if test="dev_dept != ''">
			and dev_dept = #{dev_dept}
		</if>
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryDetail_return">
		<result property="dept_code" column="dept_code" javaType="String" />
		<result property="dev_dept" column="dev_dept" javaType="String" />
		<result property="dev_team" column="dev_team" javaType="String" />
		<result property="test_dept" column="test_dept" javaType="String" />
		<result property="test_team" column="test_team" javaType="String" />
		<result property="system_alias" column="system_alias" javaType="String" />
		<result property="system_name" column="system_name" javaType="String" />
		<result property="tester" column="tester" javaType="String" />
		<result property="dever" column="dever" javaType="String" />
		<result property="assistants" column="assistants" javaType="String" />
		<result property="module" column="module" javaType="String" />
		<result property="need_sync" column="need_sync" javaType="String" />
		<result property="case_source" column="case_source" javaType="String" />
		<result property="need_email" column="need_email" javaType="String" />
		<result property="warning_define" column="warning_define" javaType="String" />
		<result property="is_valid" column="is_valid" javaType="String" />
		<result property="lcd" column="lcd" javaType="String" />
		<result property="fcd" column="fcd" javaType="String" />
	</resultMap>

	<select id="queryModule" resultType="String">
		select
		module
		from dept_system
		where
		test_team=#{test_team}
		and system_alias=#{system_alias}
	</select>

	<select id="getIdByDeptName" resultMap="getIdByDeptName_return">
		select
		dept_code
		from dept_system
		where dev_dept =
		#{dev_dept} limit 1, 1
	</select>

	<resultMap type="java.util.LinkedHashMap" id="getIdByDeptName_return">
		<result property="dept_code" column="dept_code" javaType="String" />
	</resultMap>

	<update id="update" parameterType="Map">
		update
		dept_system
		set dept_code =#{dept_code},
		dev_dept =
		#{dev_dept},
		dev_team = #{dev_team},
		test_dept = #{test_dept},
		test_team = #{test_team},
		tester =
		#{tester},
		dever = #{dever},
		assistants = #{assistants},
		need_sync = #{need_sync},
		case_source =
		#{case_source},
		warning_define=#{warning_define},
		is_valid = #{is_valid}
		where system_alias =
		#{system_alias}
		and dev_dept = #{old_dev_dept}

	</update>

</mapper>