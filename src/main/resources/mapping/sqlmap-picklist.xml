<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"mybatis-3-mapper.dtd">

<!-- 该xml需先在mybatis.xml中注册 -->
<mapper namespace="com.fudax.sqcs.picklist.dao.PickListDAO">

	<select id="creatDept" resultMap="creatDept_return">
		select distinct dept_name
		from um_info
		order by dept_name
	</select>
	<resultMap type="java.util.LinkedHashMap" id="creatDept_return">
		<result property="dept_name" column="dept_name" javaType="String" />
	</resultMap>

	<select id="creatOwner" resultMap="creatOwner_return">
		select distinct(owner) as owner
		from spcode_analyze_result
		where sid =
		#{database}
	</select>
	<resultMap type="java.util.LinkedHashMap" id="creatOwner_return">
		<result property="owner" column="owner" javaType="String" />
	</resultMap>

	<select id="creatSystemsByTestTeam" resultMap="creatSystemsByTestTeam_return">
		select distinct system_alias
		from dept_system
		where test_team =
		#{group_name}
		order by system_alias
	</select>
	<resultMap type="java.util.LinkedHashMap" id="creatSystemsByTestTeam_return">
		<result property="system_alias" column="system_alias" javaType="String" />
	</resultMap>

	<select id="creatSystemsByDevDept" resultMap="creatSystemsByDevDept_return">
		select distinct system_alias
		from dept_system
		where dev_dept =
		#{group_name}
		order by system_alias
	</select>
	<resultMap type="java.util.LinkedHashMap" id="creatSystemsByDevDept_return">
		<result property="system_alias" column="system_alias" javaType="String" />
	</resultMap>

	<select id="createProSource" resultMap="createProSource_return">
		select source_desc
		from problem_source_table
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createProSource_return">
		<result property="source_desc" column="source_desc" javaType="String" />
	</resultMap>

	<select id="createProStatus" resultMap="createProStatus_return">
		select status_desc
		from problem_status_table
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createProStatus_return">
		<result property="status_desc" column="status_desc" javaType="String" />
	</resultMap>

	<select id="queryTestTeam" resultMap="queryTestTeam_return">
		select distinct(test_team) as test_team
		from
		test_team_info
		order by test_team
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryTestTeam_return">
		<result property="test_team" column="test_team" javaType="String" />
	</resultMap>

	<select id="queryJopType" resultMap="queryJopType_return">
		select distinct job_type,
		full_name
		from
		auto_job_type_table
		order by job_type
		asc
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryJopType_return">
		<result property="job_type" column="job_type" javaType="String" />
		<result property="full_name" column="full_name" javaType="String" />
	</resultMap>

	<select id="userCurrentVersion" resultMap="userCurrentVersion_return">
		select b.system_version
		from dept_system a,
		version_plantime b
		where
		(a.tester = upper(#{current_user}) or a.dever = upper(#{current_user}))
		and a.system_name = b.sub_system_name
		and
		b.reviewtest_end_date >= #{current_date}
		and b.version_status not in ('已关闭','已发布','已提交REB')
	</select>
	<resultMap type="java.util.LinkedHashMap" id="userCurrentVersion_return">
		<result property="system_version" column="system_version" javaType="String" />
	</resultMap>

	<select id="getWarnDate" resultMap="getWarnDate_return">
		select distinct a.warning_date
		from warning_info a,
		warning_define b
		where
		a.warning_type = b.warning_type
		and a.warning_grade = b.warning_grade
		and
		a.rule_no = b.rule_no
		and a.system_version =
		#{version_name}
		union
		SELECT DISTINCT a.over_time_date
		FROM bug_checkordeal_time a
		where a.is_over_time='Y'
		AND
		a.system_version= #{version_name}
	</select>
	<resultMap type="java.util.LinkedHashMap" id="getWarnDate_return">
		<result property="warning_date" column="warning_date" javaType="String" />
	</resultMap>

	<select id="createInstance" resultMap="createInstance_return">
		select lower(instance_name) as instance_name
		from
		system_domain
		where
		upper(system_name) = upper(#{system_name})
		and instance_type = 'stg'
		union
		select
		lower(instance_name) as instance_name
		from system_info
		where upper(system_name) =
		upper(#{system_name})
		order by instance_name
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createInstance_return">
		<result property="instance_name" column="instance_name" javaType="String" />
	</resultMap>

	<select id="queryNeedDept" resultMap="queryNeedDept_return">
		select distinct d.submit_dept
		from version_plantime a,
		dept_system b,
		version_manpower c, need_info d
		where b.system_name = a.sub_system_name
		and
		b.test_team = #{test_team}
		and
		a.reviewtest_end_date >= #{starttime}
		and #{endtime}>=
		a.reviewtest_end_date
		and a.system_version = c.system_version
		and
		c.source_id = d.id_need
		order by
		a.system_version desc
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryNeedDept_return">
		<result property="submit_dept" column="submit_dept" javaType="String" />
	</resultMap>

	<select id="queryNeedSubmit" resultMap="queryNeedSubmit_return">
		select distinct d.submit_person,
		d.submit_person_name
		from version_plantime
		a, dept_system b,version_manpower c, need_info d
		where b.system_name =
		a.sub_system_name
		and b.test_team = #{test_team}
		and a.reviewtest_end_date >= #{starttime}
		and
		#{endtime} >= a.reviewtest_end_date
		and a.system_version = c.system_version
		and c.source_id =
		d.id_need
		and d.submit_dept = #{need_dept}
		order by a.system_version desc
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryNeedSubmit_return">
		<result property="submit_person" column="submit_person" javaType="String" />
		<result property="submit_person_name" column="submit_person_name" javaType="String" />
	</resultMap>

	<select id="createDevTeam" resultMap="createDevTeam_return">
		select distinct team_name
		from um_info
		where dept_name =
		#{deptName}
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createDevTeam_return">
		<result property="team_name" column="team_name" javaType="String" />
	</resultMap>

	<select id="createTeam" resultMap="createTeam_return">
		select distinct(test_team) as test_team
		from dept_system
		where dev_dept =
		#{dev_dept}
		order by test_team desc
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createTeam_return">
		<result property="team_name" column="team_name" javaType="String" />
	</resultMap>

	<select id="queryTesters" resultMap="queryTesters_return">
		select tester
		from dept_system
		where test_team =
		#{test_team}
		union
		select dever
		from dept_system
		where test_team = #{test_team}
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryTesters_return">
		<result property="tester" column="tester" javaType="String" />
	</resultMap>

	<select id="queryVersionByTeam" resultMap="queryVersionByTeam_return">
		SELECT system_version
		FROM version_plantime
		WHERE
		sub_system_name IN
		(SELECT system_name
		FROM dept_system
		WHERE test_team =#{test_team})
		AND
		reviewtest_end_date >= DATE_FORMAT(NOW(),
		'%y-%m-%d')
		ORDER BY reviewtest_end_date
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryVersionByTeam_return">
		<result property="system_version" column="system_version" javaType="String" />
	</resultMap>

	<select id="queryVersionByDev" resultMap="queryVersionByDev_return">
		SELECT system_version
		FROM version_plantime
		WHERE
		dev_dept LIKE
		CONCAT('%',#{dev_dept})
		AND reviewTest_end_date>=NOW()
		order by system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryVersionByDev_return">
		<result property="system_version" column="system_version" javaType="String" />
	</resultMap>

	<select id="queryDevTeam" resultMap="queryDevTeam_return">
		select distinct(dev_team) as dev_team
		from dept_system
		where dev_dept =
		#{dev_dept}
		and test_team = #{test_team}
		and trim(dev_team) !=''
		order by dev_team
		desc
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryDevTeam_return">
		<result property="dev_team" column="dev_team" javaType="String" />
	</resultMap>

	<select id="listSystemName" resultMap="listSystemName_return">
		select system_name
		from dept_system
		where dev_dept =
		#{dev_dept}
		order by
		system_alias
	</select>
	<resultMap type="java.util.LinkedHashMap" id="listSystemName_return">
		<result property="system_name" column="system_name" javaType="String" />
	</resultMap>

	<select id="queryUser" resultMap="queryUser_return">
		select distinct um_no,
		full_name
		from um_info
		where dept_name
		= #{dept_name}
		and
		team_name = #{team_name}
		order by um_no
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryUser_return">
		<result property="um_no" column="um_no" javaType="String" />
		<result property="full_name" column="full_name" javaType="String" />
	</resultMap>

	<select id="queryUserByDept" resultMap="queryUserByDept_return">
		select distinct um_no,
		full_name
		from um_info
		where
		dept_name = #{dept_name}
		order by um_no
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryUserByDept_return">
		<result property="um_no" column="um_no" javaType="String" />
		<result property="full_name" column="full_name" javaType="String" />
	</resultMap>

	<select id="queryUserByTeam" resultMap="queryUserByTeam_return">
		select distinct um_no,
		full_name
		from um_info
		where
		team_name = #{team_name}
		order by um_no
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryUserByTeam_return">
		<result property="um_no" column="um_no" javaType="String" />
		<result property="full_name" column="full_name" javaType="String" />
	</resultMap>

	<select id="queryIfLeader" resultMap="queryIfLeader_return">
		select um_no,
		full_name
		from
		um_info
		where leader_um = #{um_no}
		or um_no =
		#{um_no}
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryIfLeader_return">
		<result property="um_no" column="um_no" javaType="String" />
		<result property="full_name" column="full_name" javaType="String" />
	</resultMap>

	<select id="createVersionWhenTimeTypeIsReleaseAndGroupTypeIsTestTeam" resultMap="createVersionWhenTimeTypeIsReleaseAndGroupTypeIsTestTeam_return">
		select
		a.system_version
		from
		version_plantime a,dept_system ds
		where ds.system_name=a.sub_system_name
		and
		ds.test_team = #{group_name}
		and
		a.reviewtest_end_date >= #{starttime}
		and #{endtime} >=
		a.reviewtest_end_date
		order by a.system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createVersionWhenTimeTypeIsReleaseAndGroupTypeIsTestTeam_return">
		<result property="system_version" column="system_version" javaType="String" />
	</resultMap>

	<select id="createVersionWhenTimeTypeIsReleaseAndGroupTypeIsNotTestTeam" resultMap="createVersionWhenTimeTypeIsReleaseAndGroupTypeIsNotTestTeam_return">
		select
		a.system_version
		from
		version_plantime a,dept_system ds
		where ds.system_name=a.sub_system_name
		and
		ds.dev_dept = #{group_name}
		and
		a.reviewtest_end_date >= #{starttime}
		and #{endtime} >=
		a.reviewtest_end_date
		order by a.system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createVersionWhenTimeTypeIsReleaseAndGroupTypeIsNotTestTeam_return">
		<result property="system_version" column="system_version" javaType="String" />
	</resultMap>

	<select id="createVersionWhenTimeTypeIsNotReleaseAndGroupTypeIsTestTeam" resultMap="createVersionWhenTimeTypeIsNotReleaseAndGroupTypeIsTestTeam_return">
		select
		a.system_version
		from
		version_plantime a,dept_system ds
		where ds.system_name=a.sub_system_name
		and
		ds.test_team = #{group_name}
		and
		a.first_handover_test_time >= #{starttime}
		and #{endtime} >=
		a.first_handover_test_time
		order by a.system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createVersionWhenTimeTypeIsNotReleaseAndGroupTypeIsTestTeam_return">
		<result property="system_version" column="system_version" javaType="String" />
	</resultMap>

	<select id="createVersionWhenTimeTypeIsNotReleaseAndGroupTypeIsNotTestTeam" resultMap="createVersionWhenTimeTypeIsNotReleaseAndGroupTypeIsNotTestTeam_return">
		select a.system_version
		from version_plantime a,dept_system ds
		where
		ds.system_name=a.sub_system_name
		and ds.dev_dept = #{group_name}
		and
		a.first_handover_test_time >=
		#{starttime}
		and #{endtime} >= a.first_handover_test_time
		order by a.system_version
	</select>
	<resultMap type="java.util.LinkedHashMap" id="createVersionWhenTimeTypeIsNotReleaseAndGroupTypeIsNotTestTeam_return">
		<result property="system_version" column="system_version" javaType="String" />
	</resultMap>
	<select id="queryUserNameByUM" resultMap="queryUserNameByUM_return">
		select full_name,user_rank
		from um_info
		where um_no = #{userName}
	</select>
	<resultMap type="java.util.LinkedHashMap" id="queryUserNameByUM_return">
		<result property="full_name" column="full_name" javaType="String" />
		<result property="user_rank" column="user_rank" javaType="String" />
	</resultMap>
</mapper>